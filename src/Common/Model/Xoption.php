<?php
/**
 * Model Common_Model_Xoption
 * 
 * generated by gen-model task.
 */
class Common_Model_Xoption extends Common_Model_Table_Xoption {
    
	protected $_data = array();
	
    //关系映射表
    protected $_relation_map = array(
    );
    /**
     * 默认的magic field
     */
    protected $_magic_field = array();
    /**
     * @return Common_Model_Xoption
     */
    public static function getModel($data=array(),$class=__CLASS__){
        return parent::getModel($data,$class);
    }
    /**
     * 
     * 自定义after save事件
     * 作用等同于afterSave,使用于不通过save来更新数据的情况。
     * 需要人为手动执行。 
     *
     */
    public function customAfterSave(){
    	self::warn("update system var...", __CLASS__);
    	
    	//重新设置保存后,更新系统配置文件
    	$options = array(
            'condition'=>'autoload=?',
            'vars'=>array('yes'),
            'order'=>'id ASC'
        );
        $option_list = $this->find($options)->getResultArray();
        
        $config_file =  Anole_Config::get('Anole.config_dir').'/envar.yml';
        $config_option = Anole_Yaml_Spyc::YAMLLoad($config_file);
        
        if(!empty($option_list)){
            for($i=0;$i<count($option_list);$i++){
                $key = $option_list[$i]['option_name'];
                $value = $option_list[$i]['option_value'];
                $config_option['all'][$key] = $value;
            }
        }
        $ymal = Anole_Yaml_Spyc::YAMLDump($config_option,true);
            
        Anole_Util_File::writeFile($config_file,$ymal);
    	
    }
    
    /****************系统扩展参数*******************/
    public function getData(){
        return $this->_data;
    }
    
    public function setOption($k,$v){
        $this->_data[$k] = $v;
    }
    public function getOption($k,$default=null){
        return isset($this->_data[$k]) ? $this->_data[$k] : $default;
    }
    
    public function setWebsiteName($v){
        $this->setOption('website_name',$v);
        return $this;
    }
    public function getWebsiteName(){
        return $this->getOption('website_name');
    }
    
    public function setWebsiteDescription($v){
        $this->setOption('website_description', $v);
        return $this;
    }
    public function getWebsiteDescription(){
        return $this->getOption('website_description');
    }
    
    public function setWebsiteUrl($v){
        $this->setOption('website_url', $v);
        return $this;
    }
    public function getWebsiteUrl(){
        return $this->getOption('website_url');
    }
    
    public function setWebsiteMode($v){
        $this->setOption('website_mode',$v);
        return $this;
    }
    public function getWebsiteMode(){
        return $this->getOption('website_mode');
    }
    
    public function setAdminEmail($v){
        $this->setOption('admin_email',$v);
        return $this;
    }
    public function getAdminEmail(){
        return $this->getOption('admin_email');
    }
    
    public function setDefaultCommentStatus($v){
        $this->setOption('default_comment_status',$v);
        return $this;
    }
    public function getDefaultCommentStatus(){
        return $this->getOption('default_comment_status');
    }
    
    public function setUploadPath($v){
        if(is_null($v)){
            $v = 'uploads/';
        }
        $this->setOption('upload_path',$v);
        return $this;
    }
    public function getUploadPath(){
        return $this->getOption('upload_path');
    }
    
    public function setUploadUrlPath($v){
        $this->setOption('upload_url_path',$v);
        return $this;
    }
    public function getUploadUrlPath(){
        return $this->getOption('upload_url_path');
    }
    
    public function setThumbnailSizeW($v){
        $this->setOption('thumbnail_size_w',$v);
        return $this;
    }
    public function getThumbnailSizeW(){
        return $this->getOption('thumbnail_size_w');
    }
    
    public function setThumbnailSizeH($v){
        $this->setOption('thumbnail_size_h',$v);
        return $this;
    }
    public function getThumbnailSizeH(){
        return $this->getOption('thumbnail_size_h');
    }
    
    public function setThumbnailCrop($v){
        $this->setOption('thumbnail_crop',$v);
        return $this;
    }
    public function getThumbnailCrop(){
        return $this->getOption('thumbnail_crop');
    }
    
    public function setCategoryThumb($v){
        $this->setOption('category_thumb', $v);
        return $this;
    }
    public function getCategoryThumb(){
        return $this->getOption('category_thumb');
    }
}
/**vim:sw=4 et ts=4 **/
?>