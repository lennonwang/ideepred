<?php
/**
 * Table:product_history mapping class 
 * 
 * This class is auto generated by gen-model task
 */
abstract class Common_Model_Table_ProductHistory extends Anole_ActiveRecord_Base {
    
    /**
     * mapping table name
     * 
     * @var string
     */
    protected $_table_name='product_history';
    
    /**
     * table fields meta list
     * 
     * @var array
     */
    protected $_attributes = array (
  'id' => 
  array (
    'name' => 'id',
    'type' => 'S',
    'length' => '11',
  ),
  'product_id' => 
  array (
    'name' => 'product_id',
    'type' => 'S',
    'length' => '11',
  ),
  'product_size' => 
  array (
    'name' => 'product_size',
    'type' => 'S',
    'length' => '10',
  ),
  'base_price' => 
  array (
    'name' => 'base_price',
    'type' => 'N',
    'length' => -1,
  ),
  'market_price' => 
  array (
    'name' => 'market_price',
    'type' => 'N',
    'length' => -1,
  ),
  'base_discount' => 
  array (
    'name' => 'base_discount',
    'type' => 'N',
    'length' => -1,
  ),
  'updated_on' => 
  array (
    'name' => 'updated_on',
    'type' => 'S',
    'length' => -1,
  ),
  'incode' => 
  array (
    'name' => 'incode',
    'type' => 'S',
    'length' => '32',
  ),
  'shelf' => 
  array (
    'name' => 'shelf',
    'type' => 'S',
    'length' => '32',
  ),
  'is_bad' => 
  array (
    'name' => 'is_bad',
    'type' => 'S',
    'length' => -1,
  ),
  'bad_tag' => 
  array (
    'name' => 'bad_tag',
    'type' => 'S',
    'length' => '200',
  ),
  'status' => 
  array (
    'name' => 'status',
    'type' => 'S',
    'length' => '1',
  ),
);
    
        /**
     * 设置属性'id'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setId($value){
        $this->set('id',$value);
        return $this;
    }
    /**
     * 获取属性:'id'的值
     * 
     * @return string
     */
    public function getId(){
        return $this->get('id');
    }
        /**
     * 设置属性'product_id'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setProductId($value){
        $this->set('product_id',$value);
        return $this;
    }
    /**
     * 获取属性:'product_id'的值
     * 
     * @return string
     */
    public function getProductId(){
        return $this->get('product_id');
    }
        /**
     * 设置属性'product_size'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setProductSize($value){
        $this->set('product_size',$value);
        return $this;
    }
    /**
     * 获取属性:'product_size'的值
     * 
     * @return string
     */
    public function getProductSize(){
        return $this->get('product_size');
    }
        /**
     * 设置属性'base_price'的值
     *
     * @param  integer $value
     * 
     * @return ProductHistory
     */
    public function setBasePrice($value){
        $this->set('base_price',$value);
        return $this;
    }
    /**
     * 获取属性:'base_price'的值
     * 
     * @return integer
     */
    public function getBasePrice(){
        return $this->get('base_price');
    }
        /**
     * 设置属性'market_price'的值
     *
     * @param  integer $value
     * 
     * @return ProductHistory
     */
    public function setMarketPrice($value){
        $this->set('market_price',$value);
        return $this;
    }
    /**
     * 获取属性:'market_price'的值
     * 
     * @return integer
     */
    public function getMarketPrice(){
        return $this->get('market_price');
    }
        /**
     * 设置属性'base_discount'的值
     *
     * @param  integer $value
     * 
     * @return ProductHistory
     */
    public function setBaseDiscount($value){
        $this->set('base_discount',$value);
        return $this;
    }
    /**
     * 获取属性:'base_discount'的值
     * 
     * @return integer
     */
    public function getBaseDiscount(){
        return $this->get('base_discount');
    }
        /**
     * 设置属性'updated_on'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setUpdatedOn($value){
        $this->set('updated_on',$value);
        return $this;
    }
    /**
     * 获取属性:'updated_on'的值
     * 
     * @return string
     */
    public function getUpdatedOn(){
        return $this->get('updated_on');
    }
        /**
     * 设置属性'incode'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setIncode($value){
        $this->set('incode',$value);
        return $this;
    }
    /**
     * 获取属性:'incode'的值
     * 
     * @return string
     */
    public function getIncode(){
        return $this->get('incode');
    }
        /**
     * 设置属性'shelf'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setShelf($value){
        $this->set('shelf',$value);
        return $this;
    }
    /**
     * 获取属性:'shelf'的值
     * 
     * @return string
     */
    public function getShelf(){
        return $this->get('shelf');
    }
        /**
     * 设置属性'is_bad'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setIsBad($value){
        $this->set('is_bad',$value);
        return $this;
    }
    /**
     * 获取属性:'is_bad'的值
     * 
     * @return string
     */
    public function getIsBad(){
        return $this->get('is_bad');
    }
        /**
     * 设置属性'bad_tag'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setBadTag($value){
        $this->set('bad_tag',$value);
        return $this;
    }
    /**
     * 获取属性:'bad_tag'的值
     * 
     * @return string
     */
    public function getBadTag(){
        return $this->get('bad_tag');
    }
        /**
     * 设置属性'status'的值
     *
     * @param  string $value
     * 
     * @return ProductHistory
     */
    public function setStatus($value){
        $this->set('status',$value);
        return $this;
    }
    /**
     * 获取属性:'status'的值
     * 
     * @return string
     */
    public function getStatus(){
        return $this->get('status');
    }
    }
/**vim:sw=4 et ts=4 **/
?>