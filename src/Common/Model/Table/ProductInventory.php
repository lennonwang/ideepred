<?php
/**
 * Table:product_inventory mapping class 
 * 
 * This class is auto generated by gen-model task
 */
abstract class Common_Model_Table_ProductInventory extends Anole_ActiveRecord_Base {
    
    /**
     * mapping table name
     * 
     * @var string
     */
    protected $_table_name='product_inventory';
    
    /**
     * table fields meta list
     * 
     * @var array
     */
    protected $_attributes = array (
  'id' => 
  array (
    'name' => 'id',
    'type' => 'S',
    'length' => '11',
  ),
  'product_number' => 
  array (
    'name' => 'product_number',
    'type' => 'S',
    'length' => '11',
  ),
  'product_size' => 
  array (
    'name' => 'product_size',
    'type' => 'S',
    'length' => '10',
  ),
  'total_quantity' => 
  array (
    'name' => 'total_quantity',
    'type' => 'N',
    'length' => '4',
  ),
  'sale_quantity' => 
  array (
    'name' => 'sale_quantity',
    'type' => 'N',
    'length' => '4',
  ),
  'return_quantity' => 
  array (
    'name' => 'return_quantity',
    'type' => 'N',
    'length' => '4',
  ),
  'bad_quantity' => 
  array (
    'name' => 'bad_quantity',
    'type' => 'N',
    'length' => '4',
  ),
  'updated_on' => 
  array (
    'name' => 'updated_on',
    'type' => 'S',
    'length' => -1,
  ),
  'shelf' => 
  array (
    'name' => 'shelf',
    'type' => 'S',
    'length' => '32',
  ),
  'bad_tag' => 
  array (
    'name' => 'bad_tag',
    'type' => 'S',
    'length' => '200',
  ),
  'status' => 
  array (
    'name' => 'status',
    'type' => 'S',
    'length' => '1',
  ),
);
    
        /**
     * 设置属性'id'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setId($value){
        $this->set('id',$value);
        return $this;
    }
    /**
     * 获取属性:'id'的值
     * 
     * @return string
     */
    public function getId(){
        return $this->get('id');
    }
        /**
     * 设置属性'product_number'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setProductNumber($value){
        $this->set('product_number',$value);
        return $this;
    }
    /**
     * 获取属性:'product_number'的值
     * 
     * @return string
     */
    public function getProductNumber(){
        return $this->get('product_number');
    }
        /**
     * 设置属性'product_size'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setProductSize($value){
        $this->set('product_size',$value);
        return $this;
    }
    /**
     * 获取属性:'product_size'的值
     * 
     * @return string
     */
    public function getProductSize(){
        return $this->get('product_size');
    }
        /**
     * 设置属性'total_quantity'的值
     *
     * @param  integer $value
     * 
     * @return ProductInventory
     */
    public function setTotalQuantity($value){
        $this->set('total_quantity',$value);
        return $this;
    }
    /**
     * 获取属性:'total_quantity'的值
     * 
     * @return integer
     */
    public function getTotalQuantity(){
        return $this->get('total_quantity');
    }
        /**
     * 设置属性'sale_quantity'的值
     *
     * @param  integer $value
     * 
     * @return ProductInventory
     */
    public function setSaleQuantity($value){
        $this->set('sale_quantity',$value);
        return $this;
    }
    /**
     * 获取属性:'sale_quantity'的值
     * 
     * @return integer
     */
    public function getSaleQuantity(){
        return $this->get('sale_quantity');
    }
        /**
     * 设置属性'return_quantity'的值
     *
     * @param  integer $value
     * 
     * @return ProductInventory
     */
    public function setReturnQuantity($value){
        $this->set('return_quantity',$value);
        return $this;
    }
    /**
     * 获取属性:'return_quantity'的值
     * 
     * @return integer
     */
    public function getReturnQuantity(){
        return $this->get('return_quantity');
    }
        /**
     * 设置属性'bad_quantity'的值
     *
     * @param  integer $value
     * 
     * @return ProductInventory
     */
    public function setBadQuantity($value){
        $this->set('bad_quantity',$value);
        return $this;
    }
    /**
     * 获取属性:'bad_quantity'的值
     * 
     * @return integer
     */
    public function getBadQuantity(){
        return $this->get('bad_quantity');
    }
        /**
     * 设置属性'updated_on'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setUpdatedOn($value){
        $this->set('updated_on',$value);
        return $this;
    }
    /**
     * 获取属性:'updated_on'的值
     * 
     * @return string
     */
    public function getUpdatedOn(){
        return $this->get('updated_on');
    }
        /**
     * 设置属性'shelf'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setShelf($value){
        $this->set('shelf',$value);
        return $this;
    }
    /**
     * 获取属性:'shelf'的值
     * 
     * @return string
     */
    public function getShelf(){
        return $this->get('shelf');
    }
        /**
     * 设置属性'bad_tag'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setBadTag($value){
        $this->set('bad_tag',$value);
        return $this;
    }
    /**
     * 获取属性:'bad_tag'的值
     * 
     * @return string
     */
    public function getBadTag(){
        return $this->get('bad_tag');
    }
        /**
     * 设置属性'status'的值
     *
     * @param  string $value
     * 
     * @return ProductInventory
     */
    public function setStatus($value){
        $this->set('status',$value);
        return $this;
    }
    /**
     * 获取属性:'status'的值
     * 
     * @return string
     */
    public function getStatus(){
        return $this->get('status');
    }
    }
/**vim:sw=4 et ts=4 **/
?>